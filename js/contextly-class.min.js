Contextly=Contextly||{};Contextly.createClass=function(e){var t=e.abstracts||[],n=e.statics||{},r=e.extend||[];if(!(r instanceof Array))r=[r];var i;if(e.construct){i=e.construct}else if(r.length){i=function(){for(var e=0;e<r.length;e++){r[e].apply(this,arguments)}}}else{i=function(){}}var s={};delete e.construct;delete e.abstracts;delete e.statics;delete e.extend;for(var o=0;o<r.length;o++){var u=r[o];if(typeof u.construct=="function")u.construct.call(i);for(var a in u){if(typeof u[a]!="function"||a=="construct")continue;i[a]=u[a]}for(var a in u.prototype){if(typeof u.prototype[a]!="function"||a=="constructor")continue;s[a]=u.prototype[a]}}if(n.abstracts){for(var a=0;a<n.abstracts.length;a++){s[n.abstracts[a]]=function(){throw a+" is static abstract method"}}}for(var a=0;a<t.length;a++){s[t[a]]=function(){throw a+" is abstract method"}}s.instanceOf=function(e){if(arguments.length>1){var t=true;for(var n=0;n<arguments.length;n++)t=t&&this.instanceOf(arguments[n]);return t}if(i===e)return true;for(var n=0;n<r.length;n++){if(r[n].prototype.instanceOf.call(this,e))return true}return e===Object};for(var a in e){if(typeof e[a]!="function")continue;s[a]=e[a]}for(var a in n){if(typeof n[a]!="function")continue;i[a]=n[a]}if(typeof n.construct=="function")n.construct.call(i);i.prototype=s;i.fn=s;return i}
